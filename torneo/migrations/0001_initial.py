# Generated by Django 5.1.2 on 2025-01-09 10:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Consola',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('marca', models.CharField(max_length=100)),
                ('tipo', models.CharField(max_length=100)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Equipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('logotipo', models.URLField(blank=True, null=True)),
                ('fecha_ingreso', models.DateField(default=django.utils.timezone.now)),
                ('puntos_contribuidos', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Participante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puntos_obtenidos', models.IntegerField(default=0)),
                ('posicion_final', models.IntegerField(default=0)),
                ('fecha_inscripcion', models.DateField(default=django.utils.timezone.now)),
                ('tiempo_jugado', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Torneo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('categoria', models.CharField(max_length=100)),
                ('duracion', models.DurationField()),
                ('fecha_inicio', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('correo', models.EmailField(max_length=200, unique=True)),
                ('clave_de_acceso', models.CharField(max_length=200)),
                ('fecha_registro', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UsuarioLogin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.PositiveSmallIntegerField(choices=[(1, 'Administrador'), (2, 'Jugador'), (3, 'Organizador')], default=2)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Jugador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puntos', models.IntegerField(default=0)),
                ('equipo', models.CharField(blank=True, max_length=100, null=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_jugador', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Organizador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventos_creados', models.IntegerField(default=0)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_organizador', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ParticipanteEquipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rol', models.CharField(max_length=100)),
                ('fecha_ingreso', models.DateField(default=django.utils.timezone.now)),
                ('puntos_contribuidos', models.IntegerField(default=0)),
                ('tiempo_jugado', models.FloatField(default=0.0)),
                ('equipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='torneo.equipo')),
                ('participante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='torneo.participante')),
            ],
        ),
        migrations.AddField(
            model_name='participante',
            name='equipos',
            field=models.ManyToManyField(through='torneo.ParticipanteEquipo', to='torneo.equipo'),
        ),
        migrations.CreateModel(
            name='Juego',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('genero', models.CharField(max_length=50)),
                ('descripcion', models.TextField()),
                ('id_consola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='torneo.consola')),
                ('torneo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='juegos_torneo', to='torneo.torneo')),
            ],
        ),
        migrations.CreateModel(
            name='TorneoJuego',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puntos', models.IntegerField(default=0)),
                ('fecha_participacion', models.DateField(default=django.utils.timezone.now)),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('completado', 'Completado'), ('pendiente', 'Pendiente')], default='activo', max_length=50)),
                ('juego', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='torneo.juego')),
                ('torneo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='torneo.torneo')),
            ],
        ),
        migrations.AddField(
            model_name='juego',
            name='torneos',
            field=models.ManyToManyField(through='torneo.TorneoJuego', to='torneo.torneo'),
        ),
        migrations.CreateModel(
            name='TorneoJugador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inscripcion', models.DateField(default=django.utils.timezone.now)),
                ('jugador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='torneo.jugador')),
                ('torneo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='torneo.torneo')),
            ],
        ),
        migrations.AddField(
            model_name='jugador',
            name='torneos',
            field=models.ManyToManyField(related_name='jugadores', through='torneo.TorneoJugador', to='torneo.torneo'),
        ),
        migrations.CreateModel(
            name='TorneoParticipante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inscripcion', models.DateField(default=django.utils.timezone.now)),
                ('puntos_obtenidos', models.IntegerField(default=0)),
                ('posicion_final', models.IntegerField(default=0)),
                ('participante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='torneo.participante')),
                ('torneo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='torneo.torneo')),
            ],
        ),
        migrations.AddField(
            model_name='torneo',
            name='participantes',
            field=models.ManyToManyField(related_name='participante_torneo', through='torneo.TorneoParticipante', to='torneo.participante'),
        ),
        migrations.CreateModel(
            name='PerfilDeJugador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puntos', models.IntegerField(default=0)),
                ('nivel', models.IntegerField(default=0)),
                ('ranking', models.IntegerField(default=0)),
                ('avatar', models.URLField()),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='torneo.usuario')),
            ],
        ),
        migrations.AddField(
            model_name='participante',
            name='usuario',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='torneo.usuario'),
        ),
        migrations.CreateModel(
            name='Espectador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel_interes', models.IntegerField(default=0)),
                ('comentarios', models.TextField()),
                ('frecuencia_visitas', models.IntegerField()),
                ('suscripcion', models.BooleanField(default=False)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='torneo.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='Clasificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.IntegerField(default=0)),
                ('puntos', models.IntegerField(default=0)),
                ('torneos_ganados', models.IntegerField(default=0)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='jugador', to='torneo.usuario')),
            ],
        ),
    ]
